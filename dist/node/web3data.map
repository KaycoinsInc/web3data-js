{"version":3,"sources":["lib/web3data.js","lib/node/retrieve.js","index.js"],"names":["DEFAULT_BASE_URL","Web3Data","constructor","config","Error","apiKey","blockchainId","baseUrl","headers","url","params","addresses","hash","info","stats","transactions","txhash","arguments","length","filter","transactionHash","logs","functions","functionHash","tokens","tokenHash","tokenAddress","filterOptions","hasOwnProperty","call","limit","n","size","offset","index","page","orderBy","fieldName","direction","dir","module","exports","retrieve","response","json","body","error","require","prototype"],"mappings":"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","file":"web3data.map","sourceRoot":"../..","sourcesContent":["const DEFAULT_BASE_URL = 'https://web3api.io/api/v1'\n\nclass Web3Data {\n  constructor(config) {\n    this.config = config\n\n    if (!this.config) {\n      throw new Error('No configuration object supplied')\n    }\n    if (!this.config.apiKey) {\n      throw new Error('No api key supplied')\n    }\n    if (!this.config.blockchainId) {\n      throw new Error('No Blockchain specified')\n    }\n    this.baseUrl = this.config.baseUrl ? this.config.baseUrl : DEFAULT_BASE_URL\n    this.headers = {\n      'x-amberdata-api-key': this.config.apiKey,\n      'x-amberdata-blockchain-id': this.config.blockchainId\n    }\n\n    this.url = ''\n    this.params = '?'\n  }\n\n  /* ---- Methods --- */\n\n  // addresses() {\n  // }\n\n  addresses(hash) {\n    if (!hash) {\n      throw new Error('No address hash provided')\n    }\n\n    this.url += `/addresses/${hash}`\n    return this\n  }\n\n  info() {\n    this.url += '/information'\n    return this\n  }\n\n  stats() {\n    this.url += '/statistics'\n    return this\n  }\n\n  transactions(txhash) {\n    this.url += '/transactions'\n    if (arguments.length === 1) {\n      return this.filter({transactionHash: txhash})\n    }\n\n    return this\n  }\n\n  logs() {\n    this.url += '/logs'\n    return this\n  }\n\n  functions(functionHash) {\n    this.url += '/functions'\n    if (arguments.length === 1) {\n      return this.filter({transactionHash: functionHash})\n    }\n    return this\n  }\n\n  tokens(tokenHash) {\n    this.url += '/tokens'\n    if (arguments.length === 1) {\n      return this.filter({tokenAddress: tokenHash})\n    }\n\n    return this\n  }\n\n  /* ---- Modifiers --- */\n\n  filter(filterOptions) {\n    for (const filter in filterOptions) {\n      if ({}.hasOwnProperty.call(filterOptions, filter)) {\n        this.params += `${filter}=${filterOptions[filter]}&`\n      }\n    }\n    return this\n  }\n\n  limit(n) {\n    return this.filter({size: n})\n  }\n\n  size(n) {\n    return this.limit(n)\n  }\n\n  offset(index) {\n    return this.filter({page: index})\n  }\n\n  page(index) {\n    return this.offset(index)\n  }\n\n  orderBy(fieldName) {\n    return this.filter({orderBy: fieldName})\n  }\n\n  direction(dir) {\n    return this.filter({direction: dir})\n  }\n}\n\nmodule.exports = Web3Data\n","import got from 'got'\n\nasync function retrieve() {\n  // Remove '?' if there are no params\n  if (this.params.length === 1) {\n    this.params = ''\n  }\n  try {\n    const response = await got(this.url + this.params, {\n      baseUrl: this.baseUrl,\n      headers: this.headers,\n      json: true\n    })\n    return response.body\n  } catch (error) {\n    return error\n  }\n}\nexport default retrieve\n","const Web3Data = require('./lib/web3data')\nconst retrieve = require('./lib/node/retrieve')\n\n// Overriden to use the for browsers\nWeb3Data.prototype.retrieve = retrieve\nmodule.exports = Web3Data\n"]}