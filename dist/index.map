{"version":3,"sources":["constants.js","utils.js","address.js","token.js","contract.js","transaction.js","block.js","signature.js","websocket.js","web3data.js"],"names":["DEFAULT_WEBSOCKET_URL","DEFAULT_BASE_URL","API_KEY_HEADER","BLOCKCHAIN_ID_HEADER","ADDRESSES_ENDPOINT","TOKENS_ENDPOINT","TRANSACTIONS_ENDPOINT","BLOCKS_ENDPOINT","CONTRACTS_ENDPOINT","SIGNATURES_ENDPOINT","ERROR_MESSAGE_TOKEN_NO_ADDRESS","ERROR_MESSAGE_TOKEN_NO_HOLDER_ADDRESS","ERROR_MESSAGE_TRANSACTION_NO_HASH","ERROR_MESSAGE_ADDRESS_NO_ADDRESS","ERROR_MESSAGE_CONTRACT_NO_ADDRESS","ERROR_MESSAGE_BLOCK_NO_NUMBER","ERROR_MESSAGE_SIGNATURE_NO_HASH","get","web3data","endpoint","subendpoint","hash","path_param","pathParam","filterOptions","filters","is","nonEmptyObject","buildFilterUrl","rawQuery","filterUrl","filter","hasOwnProperty","call","throwIf","bool","message","Error","rejectPromiseIf","condition","Promise","reject","string","value","emptyString","length","emptyObject","object","Object","keys","inObject","property","prototype","undefined","null","notHash","notUndefined","nonEmptyString","notInObject","uuid","data","crypto","createHash","update","JSON","stringify","digest","Address","constructor","getAllAddresses","ENDPOINT","getInformation","NO_ADDRESS","getStats","getAdoption","getInternalMessages","getFunctions","getLogs","getTransactions","getBalance","getTokens","getTokenBalances","getUsage","Token","getTokenVolume","getTokenVelocity","getTokenHolders","getTokenHoldersHistorical","NO_HOLDER_ADDRESS","getTokenSupply","getTokenTransfers","Contract","getDetails","getAudit","getAbi","getSourceCode","Transaction","getGasPrediction","Block","blocknumber","NO_BLOCK_NUMBER","Signature","get4Byte","NO_HASH","WebSocketClient","WebSocket","require","formatJsonRpc","options","jsonrpc","version","method","id","params","isSubscriptionAck","msg","MAX_RECONNECTS","NO_DATA_TIMEOUT","NO_RESPONSE_TIMEOUT","apiKey","socket","baseWsUrl","websocketUrl","connected","reconnects","responseReceived","dataReceived","registry","registrySubIds","latestState","connect","callBack","addEventListener","result","console","log","listen","setTimeout","close","err","error","reconnect","code","disconnect","onclose","refreshSubscriptions","values","args","eventName","subscribe","parse","subId","res","subscription","callback","jsonRpcMessage","send","unsubscribe","readyState","OPEN","on","off","Web3Data","headers","blockchainId","baseUrl","address","token","contract","transaction","block","signature","websocket","url","response","axios"],"mappings":";AAoBO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,gCAAA,QAAA,8BAAA,QAAA,kCAAA,QAAA,iCAAA,QAAA,kCAAA,QAAA,sCAAA,QAAA,+BAAA,QAAA,oBAAA,QAAA,mBAAA,QAAA,gBAAA,QAAA,sBAAA,QAAA,gBAAA,QAAA,mBAAA,QAAA,qBAAA,QAAA,eAAA,QAAA,iBAAA,QAAA,2BAAA,EApBA,MAAMA,EAAwB,sBAoB9B,QAAA,sBApB8B,sBAC9B,MAAMC,EAAmB,4BAmBzB,QAAA,iBAAA,EAlBA,MAAMC,EAAiB,YAkBvB,QAAA,eAlBuB,YACvB,MAAMC,EAAuB,4BAiB7B,QAAA,qBAAA,EAdA,MAAMC,EAAqB,aAc3B,QAAA,mBAd2B,aAC3B,MAAMC,EAAkB,UAaxB,QAAA,gBAbwB,UACxB,MAAMC,EAAwB,gBAY9B,QAAA,sBAZ8B,gBAC9B,MAAMC,EAAkB,UAWxB,QAAA,gBAXwB,UACxB,MAAMC,EAAqB,aAU3B,QAAA,mBAV2B,aAC3B,MAAMC,EAAsB,cAS5B,QAAA,oBAT4B,cAE5B,MAAMC,EAAiC,4BAOvC,QAAA,+BAPuC,4BACvC,MAAMC,EACX,mCAKK,QAAA,sCALL,mCACK,MAAMC,EAAoC,+BAI1C,QAAA,kCAJ0C,+BAC1C,MAAMC,EAAmC,sBAGzC,QAAA,iCAHyC,sBACzC,MAAMC,EAAoC,+BAE1C,QAAA,kCAF0C,+BAC1C,MAAMC,EAAgC,2BACtC,QAAA,8BADsC,2BACtC,MAAMC,EAAkC,6BAAxC,QAAA,gCAAwC;;ACmD/C,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,KAAA,QAAA,gBAAA,QAAA,IAAA,QAAA,QAAA,QAAA,GAAA,QAAA,oBAAA,EAvEA,IAAA,EAAA,EAAA,QAAA,WAuEA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA1DA,MAAMC,EAAM,CACVC,GAEEC,SAAAA,EAAW,GACXC,YAAAA,EAAc,GACdC,KAAAA,EAAO,GACPC,WAAYC,EAAY,GACxBC,cAAAA,EAAgB,OAGZC,MAAAA,EAAUC,EAAGC,eAAeH,GAC9B,IAAMI,EAAeJ,GACrB,GAKGN,OAHPG,EAAOA,EAAO,IAAMA,EAAO,GAC3BE,EAAYA,EAAY,IAAMA,EAAY,GAC1CH,EAAcA,EAAc,IAAMA,EAAc,GACzCF,EAASW,YACXV,IAAWE,GAAQE,IAAYH,IAAcK,MAwCpD,QAAA,IAAA,EApCA,MAAMG,EAAiBJ,IACjBM,IAAAA,EAAY,GACX,IAAA,MAAMC,KAAUP,GACf,IAAGQ,eAAeC,KAAKT,EAAeO,KACxCD,MAAgBC,KAAUP,EAAcO,OAIrCD,OAAAA,GA4BT,QAAA,eAAA,EAzBA,MAAMI,EAAU,CAACC,EAAMC,KACjBD,GAAAA,EAAM,MAAM,IAAIE,MAAMD,IAwB5B,QAAA,QAAA,EArBA,MAAME,EAAkB,CAACC,EAAWH,KAC9BG,GAAAA,EAAW,OAAOC,QAAQC,OAAO,IAAIJ,MAAMD,KAoBjD,QAAA,gBAAA,EAjBA,MAAMV,EAAK,OAiBX,QAAA,GAAA,EAdAA,EAAGgB,OAASC,CAAAA,GAA0B,iBAAVA,GAC5BjB,EAAGkB,YAAcD,CAAAA,GAASjB,EAAGgB,OAAOC,IAA2B,IAAjBA,EAAME,QACpDnB,EAAGoB,YAAcC,CAAAA,GAAyC,IAA/BC,OAAOC,KAAKF,GAAQF,QAC/CnB,EAAGwB,SAAW,EAACH,EAAQI,IACrBH,OAAOI,UAAUpB,eAAeC,KAAKc,EAAQI,IAC/CzB,EAAG2B,UAAYV,CAAAA,QAA0B,IAAVA,GAC/BjB,EAAG4B,KAAOX,CAAAA,GAAmB,OAAVA,GAEnBjB,EAAG6B,QAAUlC,CAAAA,GAAQK,EAAG2B,UAAUhC,IAASK,EAAGkB,YAAYvB,IAC1DK,EAAG8B,aAAeb,CAAAA,IAAUjB,EAAG2B,UAAUV,IACzCjB,EAAGC,eAAiBoB,CAAAA,IAAWrB,EAAGoB,YAAYC,IAC9CrB,EAAG+B,eAAiBd,CAAAA,IAAUjB,EAAGkB,YAAYD,IAC7CjB,EAAGgC,YAAc,EAACX,EAAQI,KAAczB,EAAGwB,SAASH,EAAQI,IAE5D,MAAMQ,EAAOC,GACXC,EACGC,QAAAA,WAAW,QACXC,OAAOC,KAAKC,UAAUL,IACtBM,OAAO,UAJZ,QAAA,KAAA;;ACuDeC,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA9Hf,IAAA,EAAA,QAAA,eAIA,EAAA,QAAA,WAEA,MAAMA,EACJC,YAAYlD,GACLA,KAAAA,SAAWA,EAGlBmD,gBAAgB7C,GACP,OAAA,EAAI,EAAA,KAAA,KAAKN,SAAU,CAACC,SAAUmD,EAAX,mBAAqB9C,cAAAA,IAGjD+C,eAAelD,EAAMG,GACfE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,cACbI,cAAAA,IAIJiD,SAASpD,EAAMG,GACTE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,WACbI,cAAAA,IAIJkD,YAAYrD,EAAMG,GACZE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,WACbI,cAAAA,IAIJmD,oBAAoBtD,EAAMG,GACpBE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,oBACbI,cAAAA,IAIJoD,aAAavD,EAAMG,GACbE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,YACbI,cAAAA,IAIJqD,QAAQxD,EAAMG,GACRE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,OACbI,cAAAA,IAIJsD,gBAAgBzD,EAAMG,GAChBE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,eACbI,cAAAA,IAIJuD,WAAW1D,EAAMG,GACXE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,0BACbI,cAAAA,IAIJwD,UAAU3D,EAAMG,GACVE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,SACbI,cAAAA,IAIJyD,iBAAiB5D,EAAMG,GACjBE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,iBACbI,cAAAA,IAIJ0D,SAAS7D,EAAMG,GACTE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,oCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,QACbI,cAAAA,KAKS2C,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AClDAgB,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA5Ef,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,eAMA,MAAMA,EACJf,YAAYlD,GACLA,KAAAA,SAAWA,EAGlBkE,eAAe/D,EAAMG,GACfE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,kCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,gBAGxBlD,YAAa,SACbI,cAAAA,IAIJ6D,iBAAiBhE,EAAMG,GACjBE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,kCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,gBAGxBlD,YAAa,WACbI,cAAAA,IAIJ8D,gBAAgBjE,EAAMG,GAChBE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,kCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,gBAGxBlD,YAAa,iBACbI,cAAAA,IAKJ+D,0BAA0BlE,EAAMG,EAAgB,IAC1CE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,iCACxC9C,EAAGgC,GAAAA,YAAYlC,EAAe,mBACzBgB,QAAQC,OAAO,IAAIJ,MAAMmD,EAAV,yCACjB,EAAI,EAAA,KAAA,KAAKtE,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,gBAGxBlD,YAAa,qBACbI,cAAAA,IAIJiE,eAAepE,EAAMG,GACfE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,kCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,gBAGxBlD,YAAa,kBACbI,cAAAA,IAIJkE,kBAAkBrE,EAAMG,GAClBE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,kCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,gBAGxBlD,YAAa,YACbI,cAAAA,KAKS2D,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACnBAQ,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAzDf,IAAA,EAAA,QAAA,eAIA,EAAA,QAAA,WAEA,MAAMA,EACJvB,YAAYlD,GACLA,KAAAA,SAAWA,EAGlB0E,WAAWvE,EAAMG,GACXE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,qCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CAACG,KAAAA,EAAMF,SAAUmD,EAAjB,mBAA2B9C,cAAAA,IAGvDoD,aAAavD,EAAMG,GACbE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,qCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,YACbI,cAAAA,IAIJqE,SAASxE,EAAMG,GACTE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,qCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,QACbI,cAAAA,IAIJsE,OAAOzE,EAAMG,GACPE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,qCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,MACbI,cAAAA,IAIJuE,cAAc1E,EAAMG,GACdE,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMmC,EAAV,qCACrC,EAAI,EAAA,KAAA,KAAKtD,SAAU,CACxBG,KAAAA,EACAF,SAAUmD,EAFc,mBAGxBlD,YAAa,cACbI,cAAAA,KAKSmE,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACzCAK,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAhBf,IAAA,EAAA,QAAA,eACA,EAAA,QAAA,WAEA,MAAMA,EACJ5B,YAAYlD,GACLA,KAAAA,SAAWA,EAGlB+E,mBACS,OAAA,EAAI,EAAA,KAAA,KAAK/E,SAAU,CACxBC,SAAUmD,EADc,sBAExBlD,YAAa,qBAKJ4E,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACOAE,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAvBf,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,eAKA,MAAMA,EACJ9B,YAAYlD,GACLA,KAAAA,SAAWA,EAGlBwE,kBAAkBS,EAAa3E,GACzBE,OAAAA,EAAG2B,GAAAA,UAAU8C,GACR3D,QAAQC,OAAO,IAAIJ,MAAM+D,EAAV,iCACjB,EAAI,EAAA,KAAA,KAAKlF,SAAU,CACxBK,UAAW4E,EACXhF,SAAUmD,EAFc,gBAGxBlD,YAAa,kBACbI,cAAAA,KAKS0E,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACNAG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAjBf,IAAA,EAAA,QAAA,WACA,EAAA,QAAA,eAKA,MAAMA,EACJjC,YAAYlD,GACLA,KAAAA,SAAWA,EAGlBoF,SAASjF,GACHK,OAAAA,EAAG6B,GAAAA,QAAQlC,GAAcmB,QAAQC,OAAO,IAAIJ,MAAMkE,EAAV,mCACrC,EAAI,EAAA,KAAA,KAAKrF,SAAU,CAACK,UAAWF,EAAMF,SAAUmD,EAAAA,uBAI3C+B,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AC+QAG,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EAhSf,IAAA,EAAA,QAAA,eACA,EAAA,QAAA,WAEA,MAAMC,EAAYC,QAAQ,iBAOpBC,EAAgBC,GACb5C,KAAKC,UAAU,CACpB4C,QAASD,EAAQE,SAAW,MAC5BC,OAAQH,EAAQG,QAAU,YAC1BC,GAAIJ,EAAQI,IAAM,EAClBC,OAAQL,EAAQK,QAAU,KAUxBC,EAAoBC,IAAQA,EAAIF,OAEhCG,EAAiB,EACjBC,EAAkB,KAClBC,EAAsB,IAE5B,MAAMd,EACJpC,YAAYmD,EAAQX,GAuBX,OAtBFY,KAAAA,OAAS,KACTC,KAAAA,UACHb,GAAWA,EAAQc,aACfd,EAAQc,aACR1H,EAHN,sBAIKuH,KAAAA,OAASA,EAGTI,KAAAA,WAAY,EACZC,KAAAA,WAAa,EACbC,KAAAA,kBAAmB,EACnBC,KAAAA,cAAe,EAGfC,KAAAA,SAAW,GAGXC,KAAAA,eAAiB,GAGjBC,KAAAA,YAAc,GAEZ,KAGTC,QAAQC,GAEF,GAACzG,EAAG4B,GAAAA,KAAK,KAAKkE,QA6CX,OA3CFA,KAAAA,OAAS,IAAIf,KAAa,KAAKgB,uBAAuB,KAAKF,UAG3DC,KAAAA,OAAOY,iBAAiB,OAAQC,IACnCC,QAAQC,IAAI,sCAEPZ,KAAAA,WAAY,EAKZa,KAAAA,SAGDL,GAAUA,EAASE,GAEvBI,WAAW,MACJ,KAAKZ,kBAAoBnG,EAAGC,GAAAA,eAAe,KAAKoG,WAAa,KAAKP,QAAQ,KAAKA,OAAOkB,SAC1FpB,GAEHmB,WAAW,MACJ,KAAKX,cAAgBpG,EAAGC,GAAAA,eAAe,KAAKoG,WAC1CP,KAAAA,OAAOkB,SAEbrB,KAGAG,KAAAA,OAAOY,iBAAiB,QAASO,IAChCR,GAAYQ,EACdR,EAASQ,GAETL,QAAQM,MAAM,6BAGhBN,QAAQM,MAAM,6BACTC,KAAAA,cAGFrB,KAAAA,OAAOY,iBAAiB,QAASxE,IACpC0E,QAAQC,IAAI,4CAA6C3E,EAAKkF,MACzDD,KAAAA,cAGA,KAOTE,WAAWZ,EAAW,OACZ,EAAA,EAAA,UAAC,KAAKR,UAAW,+BACrBQ,IACF,KAAKX,OAAOwB,QAAU,KAAMb,EAAS,6BACnC,KAAKX,SACFA,KAAAA,OAAOkB,QACPlB,KAAAA,OAAS,MAWlBqB,YACM,KAAKlB,WACFoB,KAAAA,eAGD,KAAKnB,YAAcR,IACvBkB,QAAQC,iCACuB,KAAKX,cAAcR,KAE7Cc,KAAAA,WAOTe,uBACK,GAAC,KAAKlB,SAGJ/E,IAAAA,MAAAA,KAAAA,OAAOkG,OAAO,KAAKnB,UAAW,CAFxB,MACToB,MAAM,UAACC,EAAD,KAAYD,IACe,EAC5BE,KAAAA,UAAUD,EAAWD,IAO9BX,SACOhB,KAAAA,OAAOY,iBAAiB,UAAWhG,IAClCwB,IAAAA,EACA,IACFA,EAAOI,KAAKsF,MAAMlH,EAAQwB,MAC1B,MAAOgF,GACPN,QAAQC,IAAK,6BAA6BK,GAC1ChF,EAAO,CAACgF,MAAO,IAKb1B,GAFCW,KAAAA,kBAAmB,EAEpBX,EAAkBtD,GAAO,CACrBoD,MAAAA,EAAKpD,GAAQA,EAAKoD,GAAKpD,EAAKoD,GAAK,GAGlCgB,KAAAA,eAAepE,EAAKyE,QAAUrB,EAC9Be,KAAAA,SAASf,GAAIuC,MAAQ3F,EAAKyE,WAC1B,CACAP,KAAAA,cAAe,EAEd0B,MAAAA,EACJ5F,GAAQA,EAAKqD,QAAUrD,EAAKqD,OAAOoB,OAASzE,EAAKqD,OAAOoB,OAAS,GAC7DrB,EACJpD,GAAQA,EAAKqD,QAAUrD,EAAKqD,OAAOwC,aAC/B7F,EAAKqD,OAAOwC,aACZ,GAGA9F,EAAO,KAAKqE,eAAehB,GAG7BtF,EAAG8B,GAAAA,aAAa,KAAKuE,SAASpE,KAChC,KAAKoE,SAASpE,GAAM+F,SAASF,GAG3B9H,EAAG8B,GAAAA,aAAa,KAAKyE,YAAYtE,MACnC,KAAKsE,YAAYtE,GAAQ6F,MAYjCH,UAAUD,EAAWD,GACblC,MAAAA,EAASvF,EAAG8B,GAAAA,aAAa2F,GAAQ,CAACA,GAAQ,GAC1CnC,EACJtF,EAAG8B,GAAAA,aAAa2F,IAASzH,EAAG8B,GAAAA,aAAa2F,EAAKnC,IAC1CmC,EAAKnC,IACL,EAAK,EAAA,MAAA,CAACoC,UAAAA,EAAWD,KAAAA,IAGjBQ,EAAiBhD,EAAc,CAACK,GAAAA,EAAIC,OAAQ,CAACmC,KAAcnC,KAE1DD,OADFQ,KAAAA,OAAOoC,KAAKD,GACV3C,EAST6C,YAAYT,EAAWD,GAGfnC,MAAAA,EACJtF,EAAG8B,GAAAA,aAAa2F,IAASzH,EAAG8B,GAAAA,aAAa2F,EAAKnC,IAC1CmC,EAAKnC,IACL,EAAK,EAAA,MAAA,CAACoC,UAAAA,EAAWD,KAAAA,IAGjBQ,EAAiBhD,EAAc,CACnCK,GAAAA,EACAD,OAAQ,cACRE,OAAQ,CAAC,KAAKc,SAASf,GAAIuC,SAItB5F,OAFH,KAAK6D,OAAOsC,aAAe,KAAKtC,OAAOuC,MACzC,KAAKvC,OAAOoC,KAAKD,GACZhG,EAAP,KAUFqG,IAAG,UAACZ,EAAD,KAAYD,EAAO,IAAKO,IAEjB,EAAA,EAAA,UAACN,EAAW,uBACZ,EAAA,EAAA,UAACM,EAAU,wBAGb1C,MAAAA,GAAK,EAAK,EAAA,MAAA,CAACoC,UAAAA,EAAWD,KAAAA,IAExB,KAAKxB,WACF0B,KAAAA,UAAUD,EAAWD,GAGvBpB,KAAAA,SAASf,GAAM,GACfe,KAAAA,SAASf,GAAI0C,SAAWA,EACxB3B,KAAAA,SAASf,GAAImC,KAAO,CAACC,UAAAA,EAAWD,KAAAA,GASvCc,KAAI,UAACb,EAAD,KAAYD,EAAO,IAAKO,IAIlB,EAAA,EAAA,UAACN,EAAW,uBACZ,EAAA,EAAA,UAACM,EAAU,wBAEb1C,MAAAA,EAAK,KAAK6C,YAAYT,EAAWD,GAEnCzH,EAAG8B,GAAAA,aAAa,KAAKuE,SAASf,YAAa,KAAKe,SAASf,GAC7D0C,EAAS,8BAIElD,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;ACrLA0D,aAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,aAAAA,EA3Gf,IAAA,EAAA,EAAA,QAAA,UACA,EAAA,QAAA,eAKA,EAAA,QAAA,WACA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,YACA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,gBA8FeA,SAAAA,EAAAA,GAAAA,OAAAA,GAAAA,EAAAA,WAAAA,EAAAA,CAAAA,QAAAA,GAxFf,MAAMA,EAQJ9F,YAAYmD,EAAQX,EAAU,KAE1BlF,EAAAA,EAAAA,SAAAA,EAAG2B,GAAAA,UAAUkE,IAAW7F,EAAGkB,GAAAA,YAAY2E,GACvC,uBAIG4C,KAAAA,QAAU,GACVA,KAAAA,QAAQjK,EAAb,gBAA+BqH,EAG3BX,EAAQwD,eACLD,KAAAA,QAAQhK,EAAb,sBAAqCyG,EAAQwD,cAG1C1C,KAAAA,aAAed,EAAQc,aAKvB2C,KAAAA,QAAUzD,EAAQyD,QAAUzD,EAAQyD,QAAUpK,EAAnD,iBAKKqK,KAAAA,QAAU,IAAInG,EAAJ,QAAY,MACtBoG,KAAAA,MAAQ,IAAIpF,EAAJ,QAAU,MAClBqF,KAAAA,SAAW,IAAI7E,EAAJ,QAAa,MACxB8E,KAAAA,YAAc,IAAIzE,EAAJ,QAAgB,MAC9B0E,KAAAA,MAAQ,IAAIxE,EAAJ,QAAU,MAClByE,KAAAA,UAAY,IAAItE,EAAJ,QAAc,MAG1BuE,KAAAA,UAAY,KACZrD,KAAAA,OAASA,EAGhBW,QAAQwB,GAOC,OANHhI,EAAG4B,GAAAA,KAAK,KAAKsH,aACVA,KAAAA,UAAY,IAAIpE,EAAJ,QAAoB,KAAKe,OAAQ,CAChDG,aAAc,KAAKA,gBAIhB,KAAKkD,UAAU1C,QAAQwB,GAIhCX,WAAWW,IACD,EAAA,EAAA,UAAC,KAAKkB,UAAW,mCACpBA,KAAAA,UAAU7B,WAAWW,GAG5BM,IAAG,UAACZ,EAAD,QAAY3H,GAAUiI,IAEf,EAAA,EAAA,UAACN,EAAW,uBACZ,EAAA,EAAA,UAACM,EAAU,wBACdkB,KAAAA,UAAUZ,GAAG,CAACZ,UAAAA,EAAWD,KAAM1H,GAAUiI,GAGhDO,KAAI,UAACb,EAAD,QAAY3H,GAAUiI,IAEhB,EAAA,EAAA,UAACN,EAAW,uBACZ,EAAA,EAAA,UAACM,EAAU,wBACdkB,KAAAA,UAAUX,IAAI,CAACb,UAAAA,EAAWD,KAAM1H,GAAUiI,GAQ3C7H,eAASgJ,GAINC,aAHgBC,EAAM9J,QAAAA,IAAI,KAAKoJ,QAAUQ,EAAK,CACnDV,QAAS,KAAKA,WAEAvG,MAILsG,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA","file":"index.map","sourceRoot":"../src","sourcesContent":["export const DEFAULT_WEBSOCKET_URL = 'wss://ws.web3api.io'\nexport const DEFAULT_BASE_URL = 'https://web3api.io/api/v1'\nexport const API_KEY_HEADER = 'x-api-key'\nexport const BLOCKCHAIN_ID_HEADER = 'x-amberdata-blockchain-id'\n\n/* Endpoints */\nexport const ADDRESSES_ENDPOINT = '/addresses'\nexport const TOKENS_ENDPOINT = '/tokens'\nexport const TRANSACTIONS_ENDPOINT = '/transactions'\nexport const BLOCKS_ENDPOINT = '/blocks'\nexport const CONTRACTS_ENDPOINT = '/contracts'\nexport const SIGNATURES_ENDPOINT = '/signatures'\n\nexport const ERROR_MESSAGE_TOKEN_NO_ADDRESS = 'No token address supplied'\nexport const ERROR_MESSAGE_TOKEN_NO_HOLDER_ADDRESS =\n  'No token holder address supplied'\nexport const ERROR_MESSAGE_TRANSACTION_NO_HASH = 'No transaction hash supplied'\nexport const ERROR_MESSAGE_ADDRESS_NO_ADDRESS = 'No address supplied'\nexport const ERROR_MESSAGE_CONTRACT_NO_ADDRESS = 'No contract address supplied'\nexport const ERROR_MESSAGE_BLOCK_NO_NUMBER = 'No block number supplied'\nexport const ERROR_MESSAGE_SIGNATURE_NO_HASH = 'No signature hash supplied'\n","import crypto from 'crypto'\n\n/**\n * Builds the endpoint url to pass to .rawQuery(). Checks for non empties and appends\n * the appropriate parameter(s) where applicable.\n * @param {object} web3data instance on which to call .rawQuery()\n * @param {string} subendpoint The sub-endpoint\n * @param {string} endpoint The endpoint\n * @param {string} hash The address hash\n * @param {string} pathParam The path parameter\n * @param {object} filterOptions The filters associated with a given endpoint\n * @return returns a Promise of the rawQuery request from web3data\n */\nconst get = (\n  web3data,\n  {\n    endpoint = '',\n    subendpoint = '',\n    hash = '',\n    path_param: pathParam = '',\n    filterOptions = {}\n  }\n) => {\n  const filters = is.nonEmptyObject(filterOptions)\n    ? '?' + buildFilterUrl(filterOptions)\n    : ''\n\n  hash = hash ? '/' + hash : ''\n  pathParam = pathParam ? '/' + pathParam : ''\n  subendpoint = subendpoint ? '/' + subendpoint : ''\n  return web3data.rawQuery(\n    `${endpoint}${hash || pathParam}${subendpoint}${filters}`\n  )\n}\n\nconst buildFilterUrl = filterOptions => {\n  let filterUrl = ''\n  for (const filter in filterOptions) {\n    if ({}.hasOwnProperty.call(filterOptions, filter)) {\n      filterUrl += `${filter}=${filterOptions[filter]}&`\n    }\n  }\n\n  return filterUrl\n}\n\nconst throwIf = (bool, message) => {\n  if (bool) throw new Error(message)\n}\n\nconst rejectPromiseIf = (condition, message) => {\n  if (condition) return Promise.reject(new Error(message))\n}\n\nconst is = () => {}\n\n// TODO: Assess lodash && treeshaking\nis.string = value => typeof value === 'string'\nis.emptyString = value => is.string(value) && value.length === 0\nis.emptyObject = object => Object.keys(object).length === 0\nis.inObject = (object, property) =>\n  Object.prototype.hasOwnProperty.call(object, property)\nis.undefined = value => typeof value === 'undefined'\nis.null = value => value === null\n\nis.notHash = hash => is.undefined(hash) || is.emptyString(hash)\nis.notUndefined = value => !is.undefined(value)\nis.nonEmptyObject = object => !is.emptyObject(object)\nis.nonEmptyString = value => !is.emptyString(value)\nis.notInObject = (object, property) => !is.inObject(object, property)\n\nconst uuid = data =>\n  crypto\n    .createHash('sha1')\n    .update(JSON.stringify(data))\n    .digest('base64')\n\nexport {buildFilterUrl, is, throwIf, get, rejectPromiseIf, uuid}\n","import {\n  ERROR_MESSAGE_ADDRESS_NO_ADDRESS as NO_ADDRESS,\n  ADDRESSES_ENDPOINT as ENDPOINT\n} from './constants'\nimport {is, get} from './utils'\n\nclass Address {\n  constructor(web3data) {\n    this.web3data = web3data\n  }\n\n  getAllAddresses(filterOptions) {\n    return get(this.web3data, {endpoint: ENDPOINT, filterOptions})\n  }\n\n  getInformation(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'information',\n      filterOptions\n    })\n  }\n\n  getStats(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'metadata',\n      filterOptions\n    })\n  }\n\n  getAdoption(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'adoption',\n      filterOptions\n    })\n  }\n\n  getInternalMessages(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'internal-messages',\n      filterOptions\n    })\n  }\n\n  getFunctions(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'functions',\n      filterOptions\n    })\n  }\n\n  getLogs(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'logs',\n      filterOptions\n    })\n  }\n\n  getTransactions(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'transactions',\n      filterOptions\n    })\n  }\n\n  getBalance(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'account-balances/latest',\n      filterOptions\n    })\n  }\n\n  getTokens(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'tokens',\n      filterOptions\n    })\n  }\n\n  getTokenBalances(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'token-balances',\n      filterOptions\n    })\n  }\n\n  getUsage(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'usage',\n      filterOptions\n    })\n  }\n}\n\nexport default Address\n","import {is, get} from './utils'\nimport {\n  ERROR_MESSAGE_TOKEN_NO_ADDRESS as NO_ADDRESS,\n  ERROR_MESSAGE_TOKEN_NO_HOLDER_ADDRESS as NO_HOLDER_ADDRESS,\n  TOKENS_ENDPOINT as ENDPOINT\n} from './constants'\n\nclass Token {\n  constructor(web3data) {\n    this.web3data = web3data\n  }\n\n  getTokenVolume(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'volume',\n      filterOptions\n    })\n  }\n\n  getTokenVelocity(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'velocity',\n      filterOptions\n    })\n  }\n\n  getTokenHolders(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'holders/latest',\n      filterOptions\n    })\n  }\n\n  // TODO: Add error no holder address supplied\n  getTokenHoldersHistorical(hash, filterOptions = {}) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    if (is.notInObject(filterOptions, 'holderAddresses'))\n      return Promise.reject(new Error(NO_HOLDER_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'holders/historical',\n      filterOptions\n    })\n  }\n\n  getTokenSupply(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'supplies/latest',\n      filterOptions\n    })\n  }\n\n  getTokenTransfers(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'transfers',\n      filterOptions\n    })\n  }\n}\n\nexport default Token\n","import {\n  ERROR_MESSAGE_CONTRACT_NO_ADDRESS as NO_ADDRESS,\n  CONTRACTS_ENDPOINT as ENDPOINT\n} from './constants'\nimport {is, get} from './utils'\n\nclass Contract {\n  constructor(web3data) {\n    this.web3data = web3data\n  }\n\n  getDetails(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {hash, endpoint: ENDPOINT, filterOptions})\n  }\n\n  getFunctions(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'functions',\n      filterOptions\n    })\n  }\n\n  getAudit(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'audit',\n      filterOptions\n    })\n  }\n\n  getAbi(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'abi',\n      filterOptions\n    })\n  }\n\n  getSourceCode(hash, filterOptions) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_ADDRESS))\n    return get(this.web3data, {\n      hash,\n      endpoint: ENDPOINT,\n      subendpoint: 'source-code',\n      filterOptions\n    })\n  }\n}\n\nexport default Contract\n","import {TRANSACTIONS_ENDPOINT as ENDPOINT} from './constants'\nimport {get} from './utils'\n\nclass Transaction {\n  constructor(web3data) {\n    this.web3data = web3data\n  }\n\n  getGasPrediction() {\n    return get(this.web3data, {\n      endpoint: ENDPOINT,\n      subendpoint: 'gas/predictions'\n    })\n  }\n}\n\nexport default Transaction\n","import {get, is} from './utils'\nimport {\n  BLOCKS_ENDPOINT as ENDPOINT,\n  ERROR_MESSAGE_BLOCK_NO_NUMBER as NO_BLOCK_NUMBER\n} from './constants'\n\nclass Block {\n  constructor(web3data) {\n    this.web3data = web3data\n  }\n\n  getTokenTransfers(blocknumber, filterOptions) {\n    if (is.undefined(blocknumber))\n      return Promise.reject(new Error(NO_BLOCK_NUMBER))\n    return get(this.web3data, {\n      pathParam: blocknumber,\n      endpoint: ENDPOINT,\n      subendpoint: 'token-transfers',\n      filterOptions\n    })\n  }\n}\n\nexport default Block\n","import {get, is} from './utils'\nimport {\n  SIGNATURES_ENDPOINT as ENDPOINT,\n  ERROR_MESSAGE_SIGNATURE_NO_HASH as NO_HASH\n} from './constants'\n\nclass Signature {\n  constructor(web3data) {\n    this.web3data = web3data\n  }\n\n  get4Byte(hash) {\n    if (is.notHash(hash)) return Promise.reject(new Error(NO_HASH))\n    return get(this.web3data, {pathParam: hash, endpoint: ENDPOINT})\n  }\n}\n\nexport default Signature\n","import {DEFAULT_WEBSOCKET_URL} from './constants'\nimport {is, throwIf, uuid} from './utils'\n\nconst WebSocket = require('isomorphic-ws')\n\n/**\n * Creates a string in json rpc format\n * @param options the json rpc options\n * @return {string} the json rpc formatted string\n */\nconst formatJsonRpc = options => {\n  return JSON.stringify({\n    jsonrpc: options.version || '2.0',\n    method: options.method || 'subscribe',\n    id: options.id || 0,\n    params: options.params || [] // TODO: This is unsafe, force to be array\n  })\n}\n\n/**\n * Returns true if the websocket message is a subscription response\n * as seen here: docs.amberdata.io/reference/subscriptions#section-example-\n * @param msg the websocket response method\n * @return {boolean}\n */\nconst isSubscriptionAck = msg => !msg.params\n\nconst MAX_RECONNECTS = 3\nconst NO_DATA_TIMEOUT = 180000 /* 3 minutes */\nconst NO_RESPONSE_TIMEOUT = 5000 /* 5 seconds */\n\nclass WebSocketClient {\n  constructor(apiKey, options) {\n    this.socket = null\n    this.baseWsUrl =\n      options && options.websocketUrl\n        ? options.websocketUrl\n        : DEFAULT_WEBSOCKET_URL\n    this.apiKey = apiKey\n\n    // Internal state management\n    this.connected = false\n    this.reconnects = 0\n    this.responseReceived = false\n    this.dataReceived = false\n\n    // Keep track of subscriptions, key/value mapping of subscription ID to listeners\n    this.registry = {}\n\n    // Key/value mapping of subscription ID to the uuid (hash) of subscription\n    this.registrySubIds = {}\n\n    // Keeps track of last data received by subscription key\n    this.latestState = {}\n\n    return this\n  }\n\n  connect(callBack) {\n    // Check if connected already, if so skip\n    if (!is.null(this.socket)) return\n\n    this.socket = new WebSocket(`${this.baseWsUrl}?x-api-key=${this.apiKey}`)\n\n    // Initialize connection attempt\n    this.socket.addEventListener('open', result => {\n      console.log('websocket client connection opened')\n\n      this.connected = true\n\n      // this.refreshSubscriptions()\n\n      // Bootstrap all the listeners now!\n      this.listen()\n\n      // Fire connected callback\n      if (callBack) callBack(result)\n\n      setTimeout(() => {\n        if (!this.responseReceived && is.nonEmptyObject(this.registry) && this.socket) this.socket.close()\n      }, NO_RESPONSE_TIMEOUT)\n\n      setTimeout(() => {\n        if (!this.dataReceived && is.nonEmptyObject(this.registry)) {\n          this.socket.close()\n        }\n      }, NO_DATA_TIMEOUT)\n    })\n\n    this.socket.addEventListener('error', err => {\n      if (callBack && err) {\n        callBack(err)\n      } else {\n        console.error('connection error occurred')\n      }\n\n      console.error('connection error occurred')\n      this.reconnect()\n    })\n\n    this.socket.addEventListener('close', data => {\n      console.log('Websocket client connection closed - code', data.code)\n      this.reconnect()\n    })\n\n    return this\n  }\n\n  /**\n   * Destroys WebSocket i.e. disconnects client and drops reference.\n   * @param callBack {function} the callback function that executes on close\n   */\n  disconnect(callBack = null) {\n    throwIf(!this.connected, 'socket is not yet connected')\n    if (callBack)\n      this.socket.onclose = () => callBack('WebSocket client closed')\n    if (this.socket) {\n      this.socket.close()\n      this.socket = null\n    }\n  }\n\n  /**\n   * Initiates a reconnect given the following conditions:\n   * 1. initial connection doesnt respond within 5 seconds\n   * 2. connection doesn't get any event within 3 minutes,\n   *    and has at least 1 successful subscription\n   * 3. we got a socket error of any kind, see above\n   */\n  reconnect() {\n    if (this.connected) {\n      this.disconnect()\n    }\n\n    if (++this.reconnects <= MAX_RECONNECTS) {\n      console.log(\n        `attempting to reconnect...${this.reconnects}/${MAX_RECONNECTS}`\n      )\n      this.connect()\n    }\n  }\n\n  /**\n   * Loops through each registry item and sends subscription message\n   */\n  refreshSubscriptions() {\n    if(!this.registry) return\n    for (const {\n      args: {eventName, args}\n    } of Object.values(this.registry)) {\n      this.subscribe(eventName, args)\n    }\n  }\n\n  /**\n   * Sets up the on event listener\n   */\n  listen() {\n    this.socket.addEventListener('message', message => {\n      let data\n      try {\n        data = JSON.parse(message.data)\n      } catch (error) {\n        console.log(`error parsing json request`, error)\n        data = {error: ''}\n      }\n\n      this.responseReceived = true\n\n      if (isSubscriptionAck(data)) {\n        const id = data && data.id ? data.id : ''\n\n        // Map the subscriptionId to the uuid\n        this.registrySubIds[data.result] = id\n        this.registry[id].subId = data.result\n      } else {\n        this.dataReceived = true\n\n        const res =\n          data && data.params && data.params.result ? data.params.result : {}\n        const id =\n          data && data.params && data.params.subscription\n            ? data.params.subscription\n            : ''\n\n        // Get the uuid\n        const uuid = this.registrySubIds[id]\n\n        // Fire individual methods if they exist\n        if (is.notUndefined(this.registry[uuid]))\n          this.registry[uuid].callback(res)\n\n        // Store latest state for easy retrieval later\n        if (is.notUndefined(this.latestState[uuid]))\n          this.latestState[uuid] = res\n        // This.reconnects = 0\n      }\n    })\n  }\n\n  /**\n   * Sends subscription message to the websocket connection\n   * @param eventName the name of the event to subscribe to\n   * @param args the extra arguments associated with the subscription\n   * @return string the uuid of the subscription\n   */\n  subscribe(eventName, args) {\n    const params = is.notUndefined(args) ? [args] : []\n    const id =\n      is.notUndefined(args) && is.notUndefined(args.id)\n        ? args.id\n        : uuid({eventName, args})\n\n    /* Format and send json rpc message */\n    const jsonRpcMessage = formatJsonRpc({id, params: [eventName, ...params]})\n    this.socket.send(jsonRpcMessage)\n    return id\n  }\n\n  /**\n   *\n   * @param eventName\n   * @param args\n   * @return {*}\n   */\n  unsubscribe(eventName, args) {\n    // TODO: Throw error if eventName has been subscribed to yet\n    /* Derive uuid */\n    const id =\n      is.notUndefined(args) && is.notUndefined(args.id)\n        ? args.id\n        : uuid({eventName, args})\n\n    /* Format and send json rpc message */\n    const jsonRpcMessage = formatJsonRpc({\n      id,\n      method: 'unsubscribe',\n      params: [this.registry[id].subId]\n    })\n    if (this.socket.readyState === this.socket.OPEN)\n      this.socket.send(jsonRpcMessage)\n    return uuid\n  }\n\n  /**\n   * Creates a new event listener for the specified event.\n   * @param eventName {string} the event for which to listen\n   * @param args {object} the extra arguments associated with the subscription\n   * @param callback {function} the callback function that executes when the\n   * specified event is received by the websocket data listener.\n   */\n  on({eventName, args = {}}, callback) {\n    // TODO: Check with Trevor\n    throwIf(!eventName, 'no event specified')\n    throwIf(!callback, 'no callback provided')\n\n    /* Derive uuid */\n    const id = uuid({eventName, args})\n\n    if (this.connected) {\n      this.subscribe(eventName, args)\n    }\n\n    this.registry[id] = {}\n    this.registry[id].callback = callback\n    this.registry[id].args = {eventName, args}\n  }\n\n  /**\n   * Destroys a single event listener. Deregisters event and callback function\n   * @param eventName {string} the event to deregister\n   * @param args\n   * @param callback {function} the callback function to execute\n   */\n  off({eventName, args = {}}, callback) {\n    // NOTE: Need to talk about have args as a param it doesnt make sense yet it is the only way\n    // NOTE: If eventName and args are not exactly the same as the ones in the on method this will fail\n    // TODO: Check with Trevor\n    throwIf(!eventName, 'no event specified')\n    throwIf(!callback, 'no callback provided')\n\n    const id = this.unsubscribe(eventName, args)\n\n    if (is.notUndefined(this.registry[id])) delete this.registry[id]\n    callback('successfully unsubscribed')\n  }\n}\n\nexport default WebSocketClient\n","import axios from 'axios'\nimport {\n  API_KEY_HEADER,\n  BLOCKCHAIN_ID_HEADER,\n  DEFAULT_BASE_URL\n} from './constants'\nimport {is, throwIf} from './utils'\nimport Address from './address'\nimport Token from './token'\nimport Contract from './contract'\nimport Transaction from './transaction'\nimport Block from './block'\nimport Signature from './signature'\nimport WebSocketClient from './websocket'\n\n/**\n * Class Web3data contains methods for hitting Amberdata's\n * API endpoints.\n * */\nclass Web3Data {\n  /**\n   * Creates a Web3Data instance\n   * @param {string} apiKey  The Amberdata api key needed to access data\n   * @param {object} options  Contains additional configuration options:\n   *  - blockchainId: specifies the blockchain to get data from\n   *  - baseUrl: the base url of API calls\n   */\n  constructor(apiKey, options = {}) {\n    throwIf(\n      is.undefined(apiKey) || is.emptyString(apiKey),\n      'No api key supplied'\n    )\n\n    /* Setup required request headers */\n    this.headers = {}\n    this.headers[API_KEY_HEADER] = apiKey\n\n    /* Setup optional request headers */\n    if (options.blockchainId) {\n      this.headers[BLOCKCHAIN_ID_HEADER] = options.blockchainId\n    }\n\n    this.websocketUrl = options.websocketUrl\n    /*   ROW   ? options.websocketUrl\n      : DEFAULT_WEBSOCKET_URL\n    this.websocketUrl += '?api_key=' + apiKey */\n\n    this.baseUrl = options.baseUrl ? options.baseUrl : DEFAULT_BASE_URL\n\n    // TODO: Map to normal naming conventions\n\n    /* Web3Data composite modules */\n    this.address = new Address(this)\n    this.token = new Token(this)\n    this.contract = new Contract(this)\n    this.transaction = new Transaction(this)\n    this.block = new Block(this)\n    this.signature = new Signature(this)\n\n    // TODO: This should receive options, but not handle URL gen\n    this.websocket = null\n    this.apiKey = apiKey\n  }\n\n  connect(callback) {\n    if (is.null(this.websocket)) {\n      this.websocket = new WebSocketClient(this.apiKey, {\n        websocketUrl: this.websocketUrl\n      })\n    }\n\n    return this.websocket.connect(callback)\n  }\n\n  // TODO: The following methods must error if called before `connect()`\n  disconnect(callback) {\n    throwIf(!this.websocket, 'must run `connect` method first')\n    this.websocket.disconnect(callback)\n  }\n\n  on({eventName, filters}, callback) {\n    // TODO: Check with Trevor\n    throwIf(!eventName, 'no event specified')\n    throwIf(!callback, 'no callback provided')\n    this.websocket.on({eventName, args: filters}, callback)\n  }\n\n  off({eventName, filters}, callback) {\n    // TODO: Check with Trevor\n    throwIf(!eventName, 'no event specified')\n    throwIf(!callback, 'no callback provided')\n    this.websocket.off({eventName, args: filters}, callback)\n  }\n\n  /**\n   * Appends the API base url with the endpoint  url. Then sends an\n   * http request to the Amberdata API endpoint.\n   * @param {string} url The endpoint url with any query/path params if set\n   */\n  async rawQuery(url) {\n    const response = await axios.get(this.baseUrl + url, {\n      headers: this.headers\n    })\n    return response.data\n  }\n}\n\nexport default Web3Data\n"]}